import AsyncStorage from '@react-native-async-storage/async-storage';export const STORAGE_KEYS = Object.freeze({  IS_FIRST_INSTALL: 'is_first_install',});export const getItem = async (key, defaultValue = null) => {  try {    const value = await AsyncStorage.getItem(key);    if (value !== null) {      return JSON.parse(value);    }    return defaultValue;  } catch (error) {    console.error(`Storage: Failed to get item ${key}`, error);    return defaultValue;  }};export const setItem = async (key, value) => {  try {    await AsyncStorage.setItem(key, JSON.stringify(value));    return true;  } catch (error) {    console.error(`Storage: Failed to set item ${key}`, error);    return false;  }};export const removeItem = async key => {  try {    await AsyncStorage.removeItem(key);    return true;  } catch (error) {    console.error(`Storage: Failed to remove item ${key}`, error);    return false;  }};export const clearAll = async () => {  try {    await AsyncStorage.clear();    return true;  } catch (error) {    console.error('Storage: Failed to clear storage', error);    return false;  }};export default {  getItem,  setItem,  removeItem,  clearAll,  STORAGE_KEYS,};